%YAML 1.2
---
# http://www.sublimetext.com/docs/3/syntax.html
name: Tokay
file_extensions: [tok, tokay]
first_line_match: "#!/usr/bin/tokay"
scope: source.tok

contexts:
  main:
    - include: expression

  identifier:
    - match: '\$[0-9]+'
      scope: variable.language.tok
      push: infix-operator
    - match: '\b[A-Z_][A-Za-z_0-9]*\b'
      scope: constant.language.tok
      push: infix-operator
    - match: '\b[a-z][A-Za-z_0-9]*\b'
      scope: variable.language.tok
      push: infix-operator

  value:
    - match: '"'
      push:
        - meta_scope: string
        - match: \\.
          scope: constant.character.escape.tok
        - match: '"'
          pop: true
    - match: "''"
      push:
        - meta_scope: constant
        - match: \\.
          scope: constant.character.escape.tok
        - match: "''"
          pop: true
    - match: "'"
      push:
        - meta_scope: constant
        - match: \\.
          scope: constant.character.escape.tok
        - match: "'"
          pop: true
    - match: '\['
      push:
        - meta_scope: constant
        - match: \\.
        - match: '\]'
          pop: true
    - match: '\b[0-9]+(?:\.[0-9]+)?(?:e[+-][0-9]+)?\b'
      scope: constant.numeric.tok

  block:
    - match: '{'
      scope: meta.brace.curly.tok
      push:
        - match: '}'
          scope: meta.brace.curly.tok
          pop: true
        - include: main

  expression:
    - match: \b(Char|accept|begin|else|end|exit|expect|false|for|if|in|loop|next|not|null|peek|push|reject|repeat|return|true|void|Float|Ident|Int|Word)\b
      scope: keyword.control.tok
    - include: block
    - include: value
    - match: '(?<!\S)(#)(?!\{).*$\n?'
      scope: comment.line.tok
    - include: identifier
    - include: prefix-operator
    - include: groupings
    - match: '(?=[\S])'
      pop: true

  groupings:
    - match: \(
      scope: meta.brace.round.tok
    - match: \)
      scope: meta.brace.round.tok
      push: infix-operator
    - match: \,
      scope: punctuation.separator.parameters.tok

  prefix-operator:
    - match: '[+-]'
      scope: punctuation.operator.arithmetic.tok
      set: expression

  infix-operator:
    - match: "[=<>!]="
      scope: punctuation.operator.comparison.tok
      set: expression
    - match: '[+\-*/]=|\+\+|--|=>|=|:'
      scope: punctuation.operator.assignment.tok
      set: expression
    - match: \|\||&&|!
      scope: punctuation.operator.boolean.tok
      set: expression
    - match: '[+\-*/]'
      scope: punctuation.operator.arithmetic.tok
      set: expression
    - match: '(?=[\S])'
      pop: true
